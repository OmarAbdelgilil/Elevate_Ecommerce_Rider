// Mocks generated by Mockito 5.4.4 from annotations
// in elevate_ecommerce_driver/test/features/login/data/datasource/offline_data_source_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:elevate_ecommerce_driver/core/local/hive/hive_manager.dart'
    as _i3;
import 'package:elevate_ecommerce_driver/features/login/data/models/cache_user_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCacheUserModel_0 extends _i1.SmartFake
    implements _i2.CacheUserModel {
  _FakeCacheUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HiveManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveManager extends _i1.Mock implements _i3.HiveManager {
  MockHiveManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<bool> setToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setToken,
          [token],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> clearUser() => (super.noSuchMethod(
        Invocation.method(
          #clearUser,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> setUser(
    _i2.CacheUserModel? user,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUser,
          [
            user,
            token,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.CacheUserModel> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i4.Future<_i2.CacheUserModel>.value(_FakeCacheUserModel_0(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.CacheUserModel>);

  @override
  _i4.Future<bool> setOngoingOrder() => (super.noSuchMethod(
        Invocation.method(
          #setOngoingOrder,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> clearOngoingOrder() => (super.noSuchMethod(
        Invocation.method(
          #clearOngoingOrder,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> checkOngoingOrder() => (super.noSuchMethod(
        Invocation.method(
          #checkOngoingOrder,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
